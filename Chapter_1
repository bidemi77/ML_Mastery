from csv import reader
# Load a CSV file 
def load_csv (filename):
    file = open(filename, "r")
    lines = reader(file)
    dataset= list(lines)
    return dataset 
    
    
# Example of loading Pima Indians CSV dataset(This dataset is available on the desktop)

from csv import reader
#Load a CSV file 
def load_csv(filename):
    file = open(filename, "r")
    lines = reader(file)
    dataset=list(lines)
    return dataset 
    
# Load Dataset 
filename = 'pima-indians-diabetes.csv'
dataset  = load_csv(filename)
print('Loaded data file {0} with {1} rows and {2} columns'.format(filename, len(dataset), len(dataset[0])))
print(dataset[0])


# Convert String To Floats 

def str_column-to_float(dataset,column):
    for row in dataset:
        row[column] = float(row[column].strip())
        
# Example of converting string variables to float 
from csv import reader 
# Load a CSV file 
def load_csv(filename):
    dataset=list()
    with open(filename,"r")as file:
       csv_reader = reader(file)
       for row in csv_reader:
           if not row:
               continue 
           dataset.append(row)
     return dataset
     
 # Convert string column to float 
 for i in range(len(dataset[0])):
    str_column_to_float(dataset, i)
 print(dataset[0])
 
 # Convert string column to integer 
 def str_column_to_int(dataset, column):
     class_values = [row[column] for row in dataset]
     unique = set(class_values)
     lookup=dict()
     for i, value in enumerate(unique):
         lookup[value] = i
     for row in dataset:
         row[column] = lookup[row[column]]
     return lookup
     
  # Example of integer encoding string class values 
  from csv import reader 
  # Load a CSV file 
def load_csv(filename):
    dataset=list()
    with open(filename, 'r') as file:
        csv_reader=reader(file)
        for row in csv_reader:
            if not row:
                continue 
            dataset.append(row)
        return dataset 
           
  # Convert string column to float
  def str_column_to_float(dataset,column):
      for row in dataset:
          row[column] = float(row[column].strip())
          
  # Convert string column to integer
  
  def str_column_to_int(dataset,column):
      class_value = [row[column] for row in dataset]
      unique = set(class_values)
      lookup = dict()
      for i, value in enumerate(unique):
          lookup[value] = i
      for row in dataset:
          row[column] = lookup[row[column]
      return lookup
            
    # Load Iris dataset 
filename = 'iris.csv'
dataset=load_csv(filename)
print('Loaded  data file {0} with {1} rows and {2} columns '.format(filename, len(dataset),
len(dataset[0])))
print(dataset[0])

# Convert string columns to float 
for i in range(4):
    str_column_to_float(dataset, i)
lookup= str_column_to_int(dataset, 4)
print(dataset[0])
print(lookup)

     
    
