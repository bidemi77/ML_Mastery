# Algorithm Evaluation Methods 
# How To Implement a Train And Test Split Of Your Data.
# How To Implement a K-fold Cross-Validation SPlit Of Your Data.
# How To Choose A Resampling Method.

# Split a Dataset into a Train and Test Set.
def train_test_split(dataset, split=0.60):
    train=list()
    train_size=split * len(dataset)
    dataset_copy = list(dataset)
    while len(tarin) < train_size:
        index=randrange(len(dataset_copy))
        train.append(dataset_copy.pop(index))
    return train, dataset_copy

# Example of Splitting a Contrived Dataset into Train and Test
from random import seed 
from random import randrange 

# Split a dataset into a train and test set 
def train_test_split(dataset, split=0.60):
    train=list()
    train_size=split * len(dataset)
    dataset_copy = list(dataset)
    while len(train) < train_size:
        index=randrange(len(dataset_copy))
        train.append(dataset_copy.pop(index))
    return train, dataset_copy

# test train/test split 
seped(1)
dataset = [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10]]
train, test = train_test_split(dataset)
print(train)
print(test)

# Split a dataset into $k$ folds 
 def cross_validation_split(dataset, folds=3):
    dataset_split=list()
    dataset_copy=list(dataset)
    fold_size=int(len(dataset)/folds)
    for _ in range(folds):
        fold=list()
        while len(fold) < fold_size:
            index=randrange(len(dataset_copy))
            fold.append(dataset_copy.pop(index))
        dataset_split.append(fold)
    return dataset_split
    
# Example of Creating a Cross Validation Split
 
from random import seed 
from random import randrange
# Example of Creating a Cross Validation Split 
def cross_validation_split(dataset, folds=3):    
    dataset_split=list()
    dataset_copy= list(dataset)
    fold_size= int(len(dataset) / folds)
    for i in range(folds):
        fold=list()
        while len(fold) < fold_size:
            index= randrange(len(dataset_copy))
            fold.append(dataset_copy.pop(index))
        dataset_split.append(fold)
    return dataset_split

# Test Cross Validation Split 
seed(1)
dataset= [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10]]
folds=cross_validation_split(dataset,4)
print(folds)

